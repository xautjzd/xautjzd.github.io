<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Thinking on Zhengdong.jzd 个人博客</title><link>https://xautjzd.github.io/categories/thinking/</link><description>Recent content in Thinking on Zhengdong.jzd 个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© jzd</copyright><lastBuildDate>Sun, 22 Jun 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://xautjzd.github.io/categories/thinking/index.xml" rel="self" type="application/rss+xml"/><item><title>自我解剖</title><link>https://xautjzd.github.io/posts/2014-06-22-introspection/</link><pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2014-06-22-introspection/</guid><description>&lt;p>&lt;img src="https://xautjzd.github.io/images/20140622.jpg" alt="">&lt;/p>
&lt;p>文字的力量着实强大，但对我这个不善言语的人来说，使用起来略困难，难以透过文字准确阐释心中所思所想及所憧憬的未来生活。所以在写之前，便仔细筛选了上面这张图片，大概反应了我对于未来几十年后垂垂老矣的自己所憧憬的生活吧,因为垂钓在我童年生活中占据了不可估量的分量，至今仍难以忘怀，也是我生命中难得主动喜欢的一项兴趣爱好了。突然想到了海子的《面朝大海，春乱花开》：&lt;/p>
&lt;blockquote>
&lt;p>从明天起，做一个幸福的人&lt;br>
喂马、劈柴，周游世界&lt;br>
从明天起，关心粮食和蔬菜&lt;br>
我有一所房子，面朝大海，春暖花开&lt;br>
从明天起，和每一个亲人通信&lt;br>
告诉他们我的幸福&lt;br>
那幸福的闪电告诉我的&lt;br>
我将告诉每一个人&lt;br>
给每一条河每一座山取一个温暖的名字&lt;br>
陌生人，我也为你祝福&lt;br>
愿你有一个灿烂的前程&lt;br>
愿你有情人终成眷属&lt;br>
愿你在尘世获得幸福&lt;br>
我只愿面朝大海，春暖花开&lt;/p>
&lt;/blockquote></description></item><item><title>拆机过程中的一些收获</title><link>https://xautjzd.github.io/posts/2013-11-23-experience-share-about-computer-disassembly/</link><pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-11-23-experience-share-about-computer-disassembly/</guid><description>&lt;p>昨天吃完午饭后来到教研室，突然师妹说有个远程(其实只是充分利用教研室的旧机器，在上面发布一些教研室的web项目，还有做为版本控制器的服务器)机器现在不能远程了，尝试关机不得所以强关，然后重启便无法启动，而她的数据在上面。所以我便开始了肢解之路。&lt;/p>
&lt;p>由于几乎没有拆台式机的经验，所以拆机过程花费时间比较长，尤其是机箱外盖的拆卸。毕竟是旧机器，没有什么拆机教程可供参考，所以只能摸索着前进了，最后还是使用了点暴力手段才卸下的。拆开后，首先看了下是不是由于接口松动导致无法开机(其实连我自己都不相信是接口松动导致，因为强关不可能导致接口松动吧，可能是为了自我安慰才想到是接口松动的缘故)，查看了一番，便很快排除这个原因。突然想强关的后果很可能就是导致硬盘坏掉，但是起码也应该进入BIOS吧。便猜想是不是电源坏掉导致的原因，老师刚好这时候也出来了，看到我在拆着机，便问我什么情况，我便跟老师一五一十地把情况汇报了一番。然后老师便去隔壁(其实是老师所在部门的办公室)找了一台不能用的机器，我拿过来之后卸下电源重新换上去，当然其中还有不少接线的问题还摸索了一阵,最后才发现电源存在的作用：&lt;/p></description></item><item><title>放慢脚步回首过去一个月</title><link>https://xautjzd.github.io/posts/2013-11-21-some-ideas/</link><pubDate>Thu, 21 Nov 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-11-21-some-ideas/</guid><description>&lt;p>自上篇文章到现在差不多快一个月了，也因各种琐碎的事情没有闲下来构思一篇博文，顿时有一丝的罪恶感。吃完晚饭洗完澡坐在电脑前突然有种茫然的感觉，上了会儿高端大气的知乎浏览了几个帖子，本想着改下代码，结果发现也打不起精神，便趁此机会来码字来寻求心灵片刻的安宁吧。&lt;/p>
&lt;p>首先，说说最近的劳动吧，虽然没啥成果。最近教研室事不多，刚好师姐有个同学需要找人帮忙改个项目，便答应帮忙(当然是有酬劳的，不然也不会闲到改.net的代码，虽然目前还没有谈具体的数字)。其实也不在乎都多少，答应干此活也只是为了积累经验而已，方便日后找工作，同时也算是练手。拿到代码后，我顿时有种欲哭无泪的感觉，代码逻辑及结构之混乱超乎我想象，可以总结为以下几点：&lt;/p></description></item><item><title>一些感想</title><link>https://xautjzd.github.io/posts/2013-10-15-some-feelings/</link><pubDate>Tue, 15 Oct 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-10-15-some-feelings/</guid><description>&lt;p>如果要评价自己的话，那么我会将自己归为乐于分享的一类，不管是技术还是工具，亦或代码。平时也都关注一些科技新闻和博客，每当发现不错的信息时，都会想着第一时间将其分享给身边的朋友。&lt;/p>
&lt;p>分享过的工具中记忆比较深的当属Git，GitHub，Evernote和Vim了，系统方面则有Linux，编程方面则有Ruby。虽然可能最终用的人不是很多，但起码他们脑海中已经有了这个词，我觉得这也就够了，毕竟大部分人还是守旧派，不愿接触新鲜事物。但自己这颗乐于分享的心却从未动摇过，只要有好东西，绝对第一时间分享。但总会有那么一些人会对我的举措有误解，认为我是一个喜欢炫耀的人，推荐给大家一些他们闻所未闻的新鲜事物是为了证明我的牛，我只能一笑置之，也不想多做辩解。因为解释过多，可能又会有人说“解释是为了更好的掩饰”，所以沉默是最好的回应。&lt;/p></description></item><item><title>梦想</title><link>https://xautjzd.github.io/posts/2013-10-01-whats-my-dream/</link><pubDate>Tue, 01 Oct 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-10-01-whats-my-dream/</guid><description>&lt;p>你要搞清楚自己人生的剧本——不是你父母的续集，不是你子女的前传，更不是你朋友的外篇，对待生命你不妨大胆冒险一点，因为好歹你要失去它。如果这世界上真有奇迹，那只是努力的另一个名字，生命中最难的阶段不是没有人懂你，而是你不懂你自己。——尼采&lt;/p>
&lt;p>当读到这段话时，我陷入了沉思，不禁想：人生短短几十年，生命的1/3差不多已悄然而逝，在这1/3的年华中自己收获了什么，失去了什么。我想得到的可能就是人们眼中所谓的专业知识，比一般人士更了解计算机而已，同时可能收获的是思考问题和解决问题的能力。而失去的确是童年该有的肆无忌惮的玩耍，天马行空的想法，取而代之的是那铜墙铁壁似的教室的囚禁，被教导做个父母、老师眼中的乖孩子，死记硬背那些该死的口诀表和公式。&lt;/p></description></item><item><title>ASP.NET MVC Json()处理大数据异常解决方法</title><link>https://xautjzd.github.io/posts/2013-09-26-json-serializer-maxjsonlength-exception/</link><pubDate>Thu, 26 Sep 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-09-26-json-serializer-maxjsonlength-exception/</guid><description>&lt;p>近几天一直忙于windows下的项目，rails的学习暂时搁置了，所以也有好几天没有用fedora了，博客大致也有一周没有更新。此博客本想只记录一些Linux平台下的相关操作，但这两天碰到的问题很棘手，虽最终得以解决，但不忍就此翻篇，想将解决之法记录下来，以避免今后再次碰到此类问题又得重头再寻求解决方案，同时也分享出来，避免其他人碰到此问题时多走弯路。所以便予以记录。下面切入正题：&lt;/p>
&lt;p>先对项目做个简单介绍：&lt;/p></description></item><item><title>Cookies vs Sessions</title><link>https://xautjzd.github.io/posts/2013-09-09-cookies-vs-sessions/</link><pubDate>Mon, 09 Sep 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-09-09-cookies-vs-sessions/</guid><description>&lt;p>Http是无状态的协议，客户端给服务器发送请求，服务端响应客户端的请求，会话结束。这样两次会话间不便没有任何关联。但有时候需要在会话间进行信息共享，如：购物车，保存用户名与密码等。为此，cookie与session便诞生了,它们的存在就是为了弥补http协议无状态的缺陷。&lt;/p>
&lt;p>cookie与session最大的不同是：cookie保存在用户的浏览器中，而session则保留在服务端。正是这种不同决定了它们的不用使用场合。&lt;/p>
&lt;h2 id="cookie">##Cookie&lt;/h2>
&lt;p>cookie机制是通过扩展http协议来实现的。服务器通过在HTTP的响应头中加上一行特殊的指示以提示浏览器按照指示生成相应的cookie。其实纯粹的客户端脚本如JavaScript或者VBScript也可以生成cookie。而cookie的使用是由浏览器按照一定的原则在后台自动发送给服务器端。&lt;/p>
&lt;p>cookie主要内容包括：Name,Content,Path,Domain,Expires(过期时间)等。Domain与Path一起构成cookie的作用范围。&lt;/p>
&lt;p>若不设置Expires,则默认的cookie生命周期为浏览器会话期间，一旦浏览器关闭，cookie则会被清理掉，这种生命周期为浏览器会话期的cookie被成为会话cookie。会话cookie存储在内存中而不是在硬盘上。&lt;/p>
&lt;p>若设置了Expires,浏览器则会把生成的cookie保存在硬盘上，即使浏览器关闭后再打开，cookie依然有效，直至超过设置的expires。&lt;/p>
&lt;p>另外，session大小有限制，一旦浏览器禁用cookie，则采用cookie的购物网站便不能进行购物，所以这时候得用session了。&lt;/p></description></item><item><title>查看网站所用Web服务器类型</title><link>https://xautjzd.github.io/posts/2013-09-04-lookup-webserver/</link><pubDate>Wed, 04 Sep 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-09-04-lookup-webserver/</guid><description>学习Rails的Layout过程中，其中有提到curl，所以便简单的看了下curl的功能。虽说以前学习Shell的过程中也看到过curl,不过没怎么用过，只知道和wget功能类似，只是wget是将请求的web资源下载到本地，而curl则是在shell中显示，至于有什么其他功能也便不清楚。但是今天发现curl其实还可以用来查看website所用的web服务器类型，通过curl -I url-you-want-to-lookup命令查看即可。以下是我查看ruby-china的一个截图： 从中可以发现ruby-china采用的是nginx服务器。至于curl其他的功能慢慢再发掘吧。</description></item><item><title>账号注册通过邮箱激活</title><link>https://xautjzd.github.io/posts/2013-09-03-activate-user-via-email/</link><pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-09-03-activate-user-via-email/</guid><description>邮箱激活目的 防止用户注册时所填写的信息为虚假信息
邮箱激活的原理 用户注册时，根据用户名、Email及注册时间(精确到ms)等信息通过特定的算法(如:MD5、SHA，最好不可逆)生成相应的信息摘要(也称消息摘要)作为注册的激活码，保存到数据库当中，并且将其作为url的参数，将带有激活码的url链接发送到用户注册的Email中。
只有当用户进入邮箱中并点击该链接后，通过url中的激活码找出数据库中匹配的用户，并将此账号设为“已激活”的状态。
注：此过程没有考虑激活码过期问题，同时信息摘要也可以通过随机数来表示，不一定非要通过用户名等信息生成
Rails代码参考：
http://stackoverflow.com/questions/12805523/activate-user-via-email-in-rails</description></item><item><title>Linux活动发起</title><link>https://xautjzd.github.io/posts/2013-08-20-linux-activity-sponsoring/</link><pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-08-20-linux-activity-sponsoring/</guid><description>独乐乐不如众乐乐，独自一人埋头苦学不如一群兴趣相投之人的一起交流。记得以前大一大二时，希望能有一个领路人领着自己学习，帮自己找准学习的方向，毕竟当时太年轻，太多东西不了解，所以不知道软件这行业该学习什么，哪些东西比较有兴趣，一切源于自己接触的太少，身边也没有可交流之人。再加上学校大一大二和大三大四分隔新旧两校区，交流就更少。
正是因为自己的这些经历，然后再加上近来参加西安的rubyist party，促使了我组建Linux小组并且定期举办活动的冲动。一个人的埋头苦学，所见所闻永远局限在某个狭小的空间，只有走出去，与他们交流才能拓宽自己的知识面，提升自己的认知度，也算是多了一些朋友，多了一些交流。正所谓话不投机半句多，与自己志不同道不和的人交流真是有点对牛弹琴的感觉。所以要交流得找兴趣相投志同道合之人。
打算成立的小组规模大致10人左右，无需太多，也不希望有滥竽充数的现象。所以希望小组成员能满足以下条件：
对软件感兴趣 熟悉Linux(基本操作一般没问题) Vim | Emacs 具备以下更佳：
Git Ruby/Python/Lisp/Scala/Prolog 个人博客 初期打算:
每周一次Party（主要技术交流） 有兴趣的学习请联系我，联系方式：
新郎微薄：xautjzd 其他联系方式见我的About</description></item><item><title>更换Octopress主题</title><link>https://xautjzd.github.io/posts/2013-08-17-change-theme-of-blog/</link><pubDate>Sat, 17 Aug 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-08-17-change-theme-of-blog/</guid><description>Octopress博客搭建已经有一阵了，但一直采用的默认的主题，没时间更换。今天特意抽时间来更换下，先上Octopress官网了解了下更换Theme的原理，然后上Octopress所在的源码托管平台GitHub，在其Wiki上找到了第三方Themes,便从前到后大致将各种themes都预览了一遍，最后选择了Greyshade主题,安装方法官网写的已经非常详细，这里再啰嗦一遍：
###Install
$ cd octopress #octopress directory $ git clone git@github.com:shashankmehta/greyshade.git .themes/greyshade $ echo &amp;#34;\$greyshade: color;&amp;#34; &amp;gt;&amp;gt; sass/custom/_colors.scss //Substitue &amp;#39;color&amp;#39; with your highlight color $ rake &amp;#34;install[greyshade]&amp;#34; $ rake generate 至此，安装过程便已完成。
左侧的显示效果主要配置在_config.yml文件中。
###pages显示
Octopress默认只有Homepage和Archives两个导航菜单，不满足要求，我便又添加了&amp;quot;编程&amp;quot;、“Linux”、“所思所想”和“关于我”这几个。“关于我”的页面为静态页面，在source/blog/aboutme/下，其他的几个需要将相关的文章显示在相应的导航菜单下，便需做如下配置：
--- layout: category_index title: Thinking category: Thinking --- 这样后，只要new_post并且category为Thinking的页面都会集中在所思所想对应的页面显示。</description></item><item><title>户县之行</title><link>https://xautjzd.github.io/posts/2013-08-11-travel-to-hu-xian/</link><pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-08-11-travel-to-hu-xian/</guid><description>&lt;p>前天应阿亮之邀，去了趟少春家，现将所见所闻予以记录，聊以慰藉。&lt;/p>
&lt;p>我们三（阿亮，少春和我）于前天下午将近六点出发去户县甘河镇的少春家，大致七点半左右到。到家时，天刚暗下来。从这一刻开始到今天下午，差不多有两天的时间体验了下陕西乡村的风土人情，而体验的最佳方式则是通过味觉和视觉。&lt;/p>
&lt;p>首先，从味觉方面说，大致品尝了他家的臊子面，煎饼和yuyu（只知其音，不知其写法,也念he&amp;rsquo;r)。以前只是听陕西的同学说过他们的习俗：早晚稀饭，中午吃面，而且稀饭比较稀，上面几乎看不到米粒，碗底才有。经此一见，果不其然。不过他们煮稀饭的米和我家乡不同，第一次见识到糯米也可用于煮稀饭，以前我只知：糯米用于蒸糯米饭、做汤圆和糍粑。中午吃的是臊子面，而臊子面的核心在于臊子。阿姨做的臊子挺不错，味道很好，唯一不足的是醋放的有点多，略酸，不过不太影响总体的感觉，至少比食堂阿姨做的强好几倍。盛面的家伙很给力，直接上脸盆。碗也给力，平时在食堂吃一碗足已，但这两天都是至少吃一碗。少春则更给力，今天中午直接吃了四碗。昨晚吃的是煎饼，和我家乡的饼有点像，只是做法不同，厚薄不同，但是不得不说味道比我家乡的那个饼味道略好，这得益于我喜欢吃薄饼，而我家乡的那饼则略显厚。&lt;/p></description></item><item><title>Octopress目录结构</title><link>https://xautjzd.github.io/posts/2013-07-18-structure-of-octopress/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-07-18-structure-of-octopress/</guid><description>###Octopress博客目录结构
octopress博客的source目录结构大致如下:
source/ ├── _attachments ├── _includes │ ├── asides │ ├── custom │ │ └── asides │ └── post ├── _layouts ├── _nav_menu_items ├── _pages ├── _posts ├── blog │ └── archives ├── font ├── images │ ├── 2012 │ │ ├── 01 │ │ ├── 02 │ ├── 2013 │ │ └── 01 │ ├── fancybox │ └── social ├── javascripts │ ├── asides │ └── libs ├── jsccp └── stylesheets ├── bootstrap └── syntax 当使用rake generate时，source的_post目录中的markdown文件会被编译成html文件，并拷贝到public目录下，public目录结构与source目录结构一致，里面的内容为最终的静态页面。一般都是先rake generate生成静态页面，然后通过rake preview进行本地预览，如果显示正常，则rake deploy部署到github上。如果特别熟练，也可以直接生成静态页面并部署，不需要本地预览。可以采用rake gen_deploy一步进行。</description></item><item><title>Octopress配置Disqus插件</title><link>https://xautjzd.github.io/posts/2013-07-18-congfig-disqus-plugin/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-07-18-congfig-disqus-plugin/</guid><description>###添加Disqus插件 看到不少人博客上都有Comments功能，便也想给自己的博客添加上。经过搜寻一番，发现大多用的都是Disqus，而且octopress其实内置了其功能，只是默认没有设置.编辑博客主目录下的config.yml文件即可： $vim _config.yml
找到： #Disqus comments disqus_short_name: disqus_show_comment_count: false
填上自己注册的disqus账号的short name，并将false改成true即可。
注：Disqus一定要和yourname.github.com关联</description></item><item><title>我的第一篇博客</title><link>https://xautjzd.github.io/posts/2013-07-18-my-first-blog/</link><pubDate>Thu, 18 Jul 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-07-18-my-first-blog/</guid><description>几个月前看过Ruby基本语法，也无意中接触了Octopress，便想在GitHub pages上采用Octopress搭建一个属于自己的博客，照着官网提示开始动手实施，不过最后以失败告终。后又忙于其他工作，此事便搁浅。直至最近得空，便又开始着手此事。搭建博客工作再一次展开。 详细搭建过程官方文档写的相当详细，这里不再赘述，请参考： 官网
下面只说我搭建过程中遇到的难题： 我每次都是运行rake deploy时出现问题，也就是博客无法push到github的repository中。 每次都是![rejected] master-&amp;gt;master (no-fast-forward) 最后网上找了不少资料，然后自己也细细思考了一番，最后终得以解决。方法如下： 转到deploy目录下，执行$git pull，然后再执行git push origin master即可。</description></item></channel></rss>