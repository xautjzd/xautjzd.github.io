<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Git on Zhengdong.jzd 个人博客</title><link>https://xautjzd.github.io/categories/git/</link><description>Recent content in Git on Zhengdong.jzd 个人博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© jzd</copyright><lastBuildDate>Tue, 01 Apr 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://xautjzd.github.io/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git远程分支的一些操作</title><link>https://xautjzd.github.io/posts/2014-04-01-some-operation-on-git-branch/</link><pubDate>Tue, 01 Apr 2014 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2014-04-01-some-operation-on-git-branch/</guid><description>&lt;p>&lt;img src="https://xautjzd.github.io/images/20140401.jpg" alt="">&lt;/p>
&lt;p>我是个爱折腾的人，昨天晚上突然看着自己的博客主题不爽，便立马将其从原先的Greyshade换到现在的Cleanpress。换完并构思一篇新博客之后，再次提交到GitHub上，得到提示此分支滞后于GitHub上，采用&lt;code>git pull&lt;/code>又产生了太多冲突，冲突少手动解决还可，太多更改起来太麻烦，便萌生推掉远程分支重新提交的念头。可之前从未对远程分支做过相关的操作，只是偶尔删除远程库上的单个文件而已，又不得不求助Google了。碰到问题在解决过程中总是会学到很多，并且记忆深刻，现予以记录，方便自己，也回馈社会。&lt;/p>
&lt;p>删除之前先查看远程分支，在确定的情况下再作删除，以致不会删错。&lt;/p>
&lt;h2 id="查看远程分支">查看远程分支&lt;/h2>
&lt;p>采用&lt;code>git branch -a&lt;/code>可查看所有的分支(本地+远程),而&lt;code>git branch -r&lt;/code>仅显示远程。如果打开颜色支持，还会看到远程分支的颜色与本地不同。&lt;/p></description></item><item><title>搭建Git服务器</title><link>https://xautjzd.github.io/posts/2013-09-17-build-git-remote-repository/</link><pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-09-17-build-git-remote-repository/</guid><description>&lt;p>从开始用Git到现在也已经有一年时间了，但一直都在本地开发，用于管理本地的代码，没有进行多人协作开发，所以也没有必要搭建一个Git服务器。&lt;/p>
&lt;p>但就在昨晚，我在教研室给大家介绍Git工具时，感觉大家对这个工具貌似没有太大的热情，猜其原因，可能是因为大家对这个工具过于陌生，而我又讲的太过细节，所以他们可能听得有点烦。但是只有试过之后才能感觉其方便之处，我也希望教研室的同学都能掌握它，所以便决定在教研室搭建一个Git服务器，供大家使用，也思索着今后的项目都用git来进行管理。毕竟现在教研室只有我一人使用git,其他同学都用svn,甚至不用(其实用svn的同学不超过3个)，开发项目也难以统一，而我个人在使用过git后又不想转向svn，同时也非常希望身边的同学也能去使用git这么一个优秀工具，所以只能忽悠他们转向git了。不过经昨晚一役，证明了我忽悠人的本领完全不到家，看来今后得好好练练了。前奏有点过于冗长，下面进入正题吧。&lt;/p></description></item><item><title>Git的相关操作</title><link>https://xautjzd.github.io/posts/2013-07-22-git-roll-back/</link><pubDate>Mon, 22 Jul 2013 00:00:00 +0000</pubDate><guid>https://xautjzd.github.io/posts/2013-07-22-git-roll-back/</guid><description>&lt;p>##查看Git远程库地址
建立了远程库后，许久没操作，突然忘了其对应的具体远程库的url。可通过以下命令来查看：&lt;/p>
&lt;pre>&lt;code>$git remote -v
&lt;/code>&lt;/pre>
&lt;p>-v选项是&amp;ndash;verbose的简写，最后结果为：&lt;/p>
&lt;pre>&lt;code>origin git@github.com:xautjzd/RubyExample.git (fetch)
origin git@github.com:xautjzd/RubyExample.git (push)
&lt;/code>&lt;/pre>
&lt;p>要查看详细信息，则可以通过如下命令查看：&lt;/p>
&lt;pre>&lt;code>$git remote show remote-name
&lt;/code>&lt;/pre>
&lt;p>##添加远程库地址
$git remote add reponame url&lt;/p>
&lt;p>##远程库的重命名
$git remote rename oldname newname&lt;/p></description></item></channel></rss>